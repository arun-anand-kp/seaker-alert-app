services:
  exporter:
    build: ./exporter
    container_name: seaker_exporter
    ports:
      - "9100:9100"
    command: ["python", "app.py", "--port", "9100"]
    networks:
      - seaker_net
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: seaker_prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    ports:
      - "8000:8000"
    networks:
      - seaker_net
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: seaker_alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    networks:
      - seaker_net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:9.0.0
    container_name: seaker_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "4000:3000"
    networks:
      - seaker_net
    restart: unless-stopped

networks:
  seaker_net:
    driver: bridge
    
